version: "3"
services:
  objectiv_collector:
    container_name: objectiv_collector
    depends_on:
      - objectiv_postgres
    image: ${OBJECTIV_CONTAINER_URL}/backend:${OBJECTIV_CONTAINER_TAG}
    working_dir: /services
    entrypoint: bash -c "source venv/bin/activate; objectiv-db-init; ./collector.sh"
    ports:
      - 5000:5000
    networks:
      - obj
    environment:
      - CONFIG_DEBUG=True
    env_file: docker/pg_env
    healthcheck:
      test: ["CMD", "printf",  "\"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5000"]
      interval: 30s
      timeout: 2s
      retries: 3

  objectiv_postgres:
    container_name: objectiv_postgres
    image: postgres:latest
    ports:
      - 5432:5432
    networks:
      - obj
    volumes:
      - pgdata:/var/lib/postgresql/data/
    env_file: docker/pg_env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U objectiv" ]
      interval: 10s
      timeout: 2s
      retries: 5

  objectiv_notebook:
    container_name: objectiv_notebook
    image: ${OBJECTIV_CONTAINER_URL}/notebook:${OBJECTIV_CONTAINER_TAG}
    ports:
      - 8888:8888
    networks:
      - obj
    volumes:
      - ./ds/notebooks:/home/jovyan/work
    env_file: docker/pg_env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888" ]
      interval: 30s
      timeout: 2s
      retries: 3


# persist PG data in a docker volume
volumes:
  pgdata:

# use bridged networking, so we can access services provided from the host
networks:
  obj:
    driver: bridge

